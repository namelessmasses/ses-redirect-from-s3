# This AWS SAM template has been generated from your function's configuration. If
# your function has one or more triggers, note that the AWS resources associated
# with these triggers aren't fully specified in this template and include
# placeholder values. Open this template in AWS Application Composer or your
# favorite IDE and modify it to specify a serverless application with other AWS
# resources.
AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: An Amazon S3 trigger that reads the object as an email. Queries a DynamoDB for headers to rewrite. Sends the email with rewritten headers via SES.
Resources:
  sesredirectfroms3:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Description: >-
        An Amazon S3 trigger that reads the object as an email. Queries a DynamoDB for headers to rewrite. Sends the email with rewritten headers via SES.
      MemorySize: 128
      Timeout: 3
      Handler: src.lambda_function.lambda_handler
      Runtime: python3.10
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ses:SendEmail
                - ses:SendRawEmail
              Resource:
                - arn:aws:ses:us-west-2:732160176752:identity/*
                - arn:aws:ses:us-west-2:732160176752:configuration-set/*
            - Sid: AllowCloudWatchCreateLogGroup
              Effect: Allow
              Action:
                - logs:CreateLogGroup
              Resource: arn:aws:logs:us-west-2:732160176752:*
            - Sid: AllowCloudWatchCreatLogs
              Effect: Allow
              Action:
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - >-
                  arn:aws:logs:us-west-2:732160176752:log-group:/aws/lambda/ses-redirect-from-s3:*
            - Sid: AllowS3GetObjectFromSes
              Effect: Allow
              Action:
                - s3:GetObject
              Resource: arn:aws:s3:::com-ngarimu-s3-usw2-reporting/ses/*
            - Sid: AllowDynamodbSesRedirectRewriteRulesQuery
              Effect: Allow
              Action:
                - dynamodb:Query
              Resource:
                - >-
                  arn:aws:dynamodb:us-west-2:732160176752:table/ses_redirect_rewrite_rules
      RecursiveLoop: Terminate
      SnapStart:
        ApplyOn: None
      Tags:
        lambda-console:blueprint: s3-get-object-python
      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: Bucket1
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: ses/
      RuntimeManagementConfig:
        UpdateRuntimeOn: Auto
  Bucket1:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: Bucket1
      PolicyDocument:
        Statement:
          - Action: s3:*
            Effect: Deny
            Principal: '*'
            Resource:
              - arn:aws:s3:::Bucket1/*
              - arn:aws:s3:::Bucket1
            Condition:
              Bool:
                aws:SecureTransport: false
